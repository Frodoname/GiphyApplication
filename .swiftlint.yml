# Игнорировать пустые строки с пробелами в конце строки
disabled_rules:
  - trailing_whitespace
  
opt_in_rules:
  - force_unwrapping



# Будет ошибка, если будут замечания
warning_threshold: 1

# Будет ошибка, если длина строки кода будет длиннее 120 символов
# Line length must be less than 120 symbols
line_length:
  warning: 120
  error: 120
  ignores_urls: true
  ignores_comments: true

# Будет ошибка при принудительном разворачивании типа
# Remove force unwrapp
force_unwrapping:
  error

# Будет ошибка при принудительном касте типов
# Remove force downcast
force_cast:
  error
  
# Error with semicolon at the end
trailing_semicolon:
  error
  
# There will be an error when using extra brackets
control_statement:
  error

# There will be an error if you specify get tera too much
implicit_getter:
  error

# There will be an error if the method parameters are multi-line, but not aligned horizontally
vertical_parameter_alignment:
  error

# There will be an error if there are no necessary spaces when specifying the return value
return_arrow_whitespace:
  error

# There will be an error when unnecessary mention of unused objects
unused_optional_binding:
  error

# There will be an error when specifying specified array types and dictionaries in outdated formats
syntactic_sugar:
  error

# Custom rules
custom_rules:
  custom_cyrillic_file_name:
    name: "the use of Cyrillic letters in the names of files is prohibited"
    regex: "[A-Za-z]*[ЁёА-я]+[A-Za-z]*(\\.swift)$"
    message: "Check the file name for Cyrillic characters"
    match_kinds:
      - comment
    severity: error
    
  custom_cyrillic_code:
    name: "The use of Cyrillic outside of comments, lines and documentation is prohibited"
    regex: "[ЁёА-я]"
    message: "Check the name for the content of Cyrillic characters"
    match_kinds:
      - argument
      - identifier
      - keyword
      - parameter
      - typeidentifier
    severity: error

  custom_map_name:
    name: "Dictionaries should be named with the Map suffix"
    regex: "(?<!(Map)|(map))(:| =) \\[\\w+: \\w+]( |,|\\))"
    message: "Add the suffix Map"
    severity: error

  custom_set_name:
    name: "Sets should be named with the suffix Set"
    regex: "(?<!(Set)|(set))(((: Set<\\w+>(?!\\])([\\s]| *.)))| = Set<)"
    message: "Add the suffix Set"
    severity: error

  custom_wrong_id:
    name: "Invalid identifier name"
    excluded: "path/to/DTO"
    regex: "(var|let) \\w*Id( |:)"
    message: "Use ID"
    severity: error

  custom_wrong_url:
    name: "Invalid URL name"
    excluded: "path/to/DTO"
    regex: "(var|let) \\w*Url( |:)"
    message: "Use URL"
    severity: error

  custom_dto_suffix:
    name: "The DTO model must have the suffix 'DTO'"
    included: "path/to/DTO"
    regex: "(struct \\w*(?<!DTO):)|(struct (\\w*(?<!DTO)<))"
    message: "The DTO model must have the suffix 'DTO'"
    severity: error

  custom_enum_suffix:
    name: "Enum is prohibited in DTO"
    included: "path/to/DTO"
    regex: "(enum (?!CodingKeys))"
    message: "Use enum in models"
    severity: error

  custom_empty_string:
    name: "Invalid string check for emptiness"
    regex: "( == \"\")|(== \"\")|( ==\"\")|(==\"\")|( != \"\")|(!= \"\")|( !=\"\")|(!=\"\")"
    message: "Use 'string.isEmpty'"
    severity: error

  custom_guard_self:
    name: "Incorrect use of guard let self = self"
    regex: "guard\\s+let\\s+(((?!self).)\\S* = self[ ,]|`self` = self)"
    message: "Use 'guard let self = self'"
    severity: error

  custom_array_type:
    name: "Неверное создание массива"
    regex: "(var|let) \\w* = \\[\\w*\\]\\(\\)"
    message: "Invalid array creation"
    severity: error

  custom_boolean_redundant_condition:
    name: "Optional chaining for Bool is prohibited"
    regex: "(?? true)|(?? false)"
    message: "Use == true or == false"
    severity: error

  custom_boolean_clear_condition:
    name: "Overcomplicated condition"
    regex: "^(?>(?!(as\\?)|(\\?.)).)*((!= true)|(!= false)).*$"
    message: "Use == true or == false or the variable itself as a condition"
    severity: error

 # custom_documentation_ticks:
  #  name: "Incorrect apostrophe in the documentation"
   # regex: "´"
    #message: "Use "' instead of " for the documentation to work correctly."
    #match_kinds:
     # - comment
      #- doccomment
    #severity: error

  custom_boolean_in_ternar_return:
    name: "Returning Bool from the ternary operator"
    regex: "\\? (true : false)|(false : true)"
    message: "Don't use the ternary operator to return Bool"
    severity: error

  custom_unowned:
    name: "The use of unowned is prohibited"
    regex: "\\[unowned "
    message: "Use 'weak' instead 'unowned'"
    severity: error

  custom_type_inferred_context:
    name: "Unnecessary type indication"
    regex: "^\\w* *((var)|(let)) \\w+\\:\\s(\\w+)\\s\\=\\s\\4"
    message: "var a = Type()"
    severity: error

  custom_func_line_breaks:
    name: "Hyphenation when calling a function"
    regex: "\\w+\\((\\w+: |)[\\w.|\\[\\]\":$%]+,$"
    message: "Line breaks must be done according to the guideline"
    severity: error

  custom_array_line_breaks:
    name: "Transfers with multiline arrays"
    regex: "\\[[\\d\\w,.]+,$"
    message: "Line breaks for multiline arrays must be done according to the guideline"
    severity: error

  custom_handler_names:
    name: "The closure name does not contain the Handler suffix"
    regex: "(var|let) \\w+(Action|Block): (\\(|\\w+(Action|Handler))"
    message: "The closure must have the Handler suffix"
    severity: error

  custom_forced_handlers:
    name: "Force unwrapping is prohibited for closures"
    regex: "(var|let) \\w+: (\\(*\\w*\\)->\\(\\w*\\)*|\\w+(Action|Handler))!"
    message: "Instead of var handler: Handler! use var handler: Handler?"
    severity: error

  custom_color_literal:
    name: "Color literals are prohibited"
    regex: "#colorLiteral"
    message: "Use the ready-made colors added to the application"
    severity: error

  custom_objc_inline:
    name: "Incorrect spelling of @objc"
    regex: "@objc\\n"
    message: "Write @objc in one line"
    severity: error

  custom_texts:
    name: "It is forbidden to use hardcore for text in Presentation"
    included: "path/to/Presentation"
    regex: "\"[a-zA-Zа-яА-Я]"
    message: "Use the Texts structure"
    match_kinds:
      - string
    severity: error

